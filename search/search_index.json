{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":""},{"location":"#netbox-aws-resources-plugin","title":"NetBox AWS Resources Plugin","text":"<ul> <li>Free software: Apache-2.0</li> <li>Documentation: https://zeddD1abl0.github.io/netbox-aws-resources-plugin/</li> </ul> <p>A plugin for NetBox to model and manage Amazon Web Services (AWS) resources. This plugin extends NetBox to serve as a source of truth for key AWS infrastructure components, enabling better visibility and management of your cloud and on-premise resources in one place.</p>"},{"location":"#features","title":"Features","text":"<p>This plugin introduces the following models to NetBox:</p> <ul> <li>AWS Account: Manage AWS account information, including Account ID and parent/child relationships for AWS Organizations.</li> <li>AWS VPC: Model your Virtual Private Clouds, including their CIDR blocks and region.</li> <li>AWS Subnet: Track your VPC subnets, their CIDR blocks, and availability zones.</li> <li>AWS EC2 Instance: Document your EC2 instances, including instance type, VPC/subnet placement, and link them to NetBox Virtual Machines.</li> <li>AWS RDS Instance: Keep track of your RDS database instances, their class, engine, and VPC/subnet placement.</li> <li>AWS Load Balancer: Model Application, Network, and Gateway Load Balancers, their type, scheme, and associated subnets.</li> <li>AWS Target Group: Define Target Groups for your load balancers, linking them to a specific NetBox Service (protocol and port).</li> </ul>"},{"location":"#models","title":"Models","text":"<p>The plugin introduces the following NetBox models. For detailed information on each model, please refer to the documentation links below:</p> <ul> <li>AWSAccount</li> <li>AWSVPC</li> <li>AWSSubnet</li> <li>AWSLoadBalancer</li> </ul>"},{"location":"#compatibility","title":"Compatibility","text":"NetBox Version Plugin Version 4.0 4.0.0-alpha1"},{"location":"#installation","title":"Installation","text":"<p>For adding to a NetBox Docker setup see the general instructions for using netbox-docker with plugins.</p> <p>While this is still in development and not yet on pypi you can install with pip from the root of this repository:</p> <pre><code>pip install .\n</code></pre> <p>Alternatively, you can install with pip from git:</p> <pre><code>pip install git+https://github.com/zeddD1abl0/netbox-aws-resources-plugin\n</code></pre> <p>or by adding to your <code>local_requirements.txt</code> or <code>plugin_requirements.txt</code> (netbox-docker):</p> <pre><code>git+https://github.com/zeddD1abl0/netbox-aws-resources-plugin\n</code></pre> <p>Enable the plugin in <code>/opt/netbox/netbox/netbox/configuration.py</code>,  or if you use netbox-docker, your <code>/configuration/plugins.py</code> file :</p> <pre><code>PLUGINS = [\n    'netbox_aws_resources_plugin' # Ensure this matches your plugin's package name\n]\n\nPLUGINS_CONFIG = {\n    \"netbox_aws_resources_plugin\": { # Ensure this matches your plugin's package name\n        # Plugin-specific configuration options can be added here in the future\n    },\n}\n</code></pre> <p>After installing the plugin, run the following commands from the NetBox root directory (<code>/opt/netbox/netbox/</code>):</p> <pre><code># Apply database migrations\n./manage.py migrate\n\n# Collect static files\n./manage.py collectstatic\n\n# Restart NetBox services\nsudo systemctl restart netbox netbox-rq\n</code></pre>"},{"location":"#usage","title":"Usage","text":"<p>Once installed and configured, you will find an \"AWS\" section in the NetBox navigation menu. From there, you can add and manage your AWS resources just like any other NetBox object.</p>"},{"location":"#credits","title":"Credits","text":"<p>Based on the NetBox plugin tutorial:</p> <ul> <li>demo repository</li> <li>tutorial</li> </ul> <p>This package was created with Cookiecutter and the <code>netbox-community/cookiecutter-netbox-plugin</code> project template.</p>"},{"location":"changelog/","title":"Changelog","text":""},{"location":"changelog/#changelog","title":"Changelog","text":""},{"location":"changelog/#010-2025-05-21","title":"0.1.0 (2025-05-21)","text":"<ul> <li>First release on PyPI.</li> </ul>"},{"location":"contributing/","title":"Contributing","text":""},{"location":"contributing/#contributing","title":"Contributing","text":"<p>Contributions are welcome, and they are greatly appreciated! Every little bit helps, and credit will always be given.</p> <p>We love your input! We want to make contributing to this project as easy and transparent as possible, whether it's:</p> <ul> <li>Reporting a bug</li> <li>Discussing the current state of the code</li> <li>Submitting a fix</li> <li>Proposing new features</li> <li>Becoming a maintainer</li> </ul>"},{"location":"contributing/#general-tips-for-working-on-github","title":"General Tips for Working on GitHub","text":"<ul> <li>Register for a free GitHub account if you haven't already.</li> <li>You can use GitHub Markdown for formatting text and adding images.</li> <li>To help mitigate notification spam, please avoid \"bumping\" issues with no activity. (To vote an issue up or down, use a  or  reaction.)</li> <li>Please avoid pinging members with <code>@</code> unless they've previously expressed interest or involvement with that particular issue.</li> <li>Familiarize yourself with this list of discussion anti-patterns and make every effort to avoid them.</li> </ul>"},{"location":"contributing/#types-of-contributions","title":"Types of Contributions","text":""},{"location":"contributing/#report-bugs","title":"Report Bugs","text":"<p>Report bugs at https://github.com/zeddD1abl0/netbox-aws-resources-plugin/issues.</p> <p>If you are reporting a bug, please include:</p> <ul> <li>Your operating system name and version.</li> <li>Any details about your local setup that might be helpful in troubleshooting.</li> <li>Detailed steps to reproduce the bug.</li> </ul>"},{"location":"contributing/#fix-bugs","title":"Fix Bugs","text":"<p>Look through the GitHub issues for bugs. Anything tagged with \"bug\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#implement-features","title":"Implement Features","text":"<p>Look through the GitHub issues for features. Anything tagged with \"enhancement\" and \"help wanted\" is open to whoever wants to implement it.</p>"},{"location":"contributing/#write-documentation","title":"Write Documentation","text":"<p>NetBox AWS Resources Plugin could always use more documentation, whether as part of the official NetBox AWS Resources Plugin docs, in docstrings, or even on the web in blog posts, articles, and such.</p>"},{"location":"contributing/#submit-feedback","title":"Submit Feedback","text":"<p>The best way to send feedback is to file an issue at https://github.com/zeddD1abl0/netbox-aws-resources-plugin/issues.</p> <p>If you are proposing a feature:</p> <ul> <li>Explain in detail how it would work.</li> <li>Keep the scope as narrow as possible, to make it easier to implement.</li> <li>Remember that this is a volunteer-driven project, and that contributions   are welcome :)</li> </ul>"},{"location":"contributing/#get-started","title":"Get Started!","text":"<p>Ready to contribute? Here's how to set up <code>netbox-aws-resources-plugin</code> for local development.</p> <ol> <li>Fork the <code>netbox-aws-resources-plugin</code> repo on GitHub.</li> <li> <p>Clone your fork locally</p> <pre><code>$ git clone git@github.com:your_name_here/netbox-aws-resources-plugin.git\n</code></pre> </li> <li> <p>Activate the NetBox virtual environment (see the NetBox documentation under Setting up a Development Environment):</p> <pre><code>$ source ~/.venv/netbox/bin/activate\n</code></pre> </li> <li> <p>Add the plugin to NetBox virtual environment in Develop mode (see Plugins Development):</p> <p>To ease development, it is recommended to go ahead and install the plugin at this point using setuptools' develop mode. This will create symbolic links within your Python environment to the plugin development directory. Call setup.py from the plugin's root directory with the develop argument (instead of install):</p> <pre><code>$ python setup.py develop\n</code></pre> </li> <li> <p>Create a branch for local development:</p> <pre><code>$ git checkout -b name-of-your-bugfix-or-feature\n</code></pre> <p>Now you can make your changes locally.</p> </li> <li> <p>Commit your changes and push your branch to GitHub:</p> <pre><code>$ git add .\n$ git commit -m \"Your detailed description of your changes.\"\n$ git push origin name-of-your-bugfix-or-feature\n</code></pre> </li> <li> <p>Submit a pull request through the GitHub website.</p> </li> </ol>"},{"location":"contributing/#pull-request-guidelines","title":"Pull Request Guidelines","text":"<p>Before you submit a pull request, check that it meets these guidelines:</p> <ol> <li>The pull request should include tests.</li> <li>If the pull request adds functionality, the docs should be updated. Put    your new functionality into a function with a docstring, and add the    feature to the list in README.md.</li> <li>The pull request should work for Python 3.8, 3.9, 3.10 and 3.11. Check    https://github.com/zeddD1abl0/netbox-aws-resources-plugin/actions    and make sure that the tests pass for all supported Python versions.</li> </ol>"},{"location":"contributing/#deploying","title":"Deploying","text":"<p>A reminder for the maintainers on how to deploy. Make sure all your changes are committed (including an entry in CHANGELOG.md) and that all tests pass. Then in the github project go to <code>Releases</code> and create a new release with a new tag.  This will automatically upload the release to pypi:</p>"},{"location":"models/aws_account/","title":"Aws account","text":""},{"location":"models/aws_account/#awsaccount","title":"AWSAccount","text":"<p>An AWS account is a container for your AWS resources. It provides a way to manage and isolate your resources, and also provides mechanisms for security, access, and billing.</p> <p>For more information, see the AWS Account Management Reference Guide.</p>"},{"location":"models/aws_account/#attributes","title":"Attributes","text":"<p>Represents an individual AWS Account within NetBox.</p> <ul> <li><code>account_id</code>: The unique 12-digit AWS Account ID (optional).</li> <li><code>name</code>: A user-defined descriptive name for the account. (Required)</li> <li><code>tenant</code>: The NetBox <code>Tenant</code> this AWS Account is associated with (optional).</li> <li><code>parent_account</code>: A foreign key to another <code>AWSAccount</code> instance, representing the parent in a hierarchy. If null, the account is considered a \"Root\" account (optional).</li> </ul>"},{"location":"models/aws_load_balancer/","title":"Aws load balancer","text":""},{"location":"models/aws_load_balancer/#awsloadbalancer","title":"AWSLoadBalancer","text":"<p>Elastic Load Balancing automatically distributes incoming application traffic across multiple targets, such as Amazon EC2 instances, containers, IP addresses, and Lambda functions. It can handle the varying load of your application traffic in a single Availability Zone or across multiple Availability Zones.</p> <p>This plugin supports Application Load Balancers (ALB) and Network Load Balancers (NLB).</p> <p>For more information, see the Elastic Load Balancing User Guide.</p>"},{"location":"models/aws_load_balancer/#attributes","title":"Attributes","text":"<p>Represents an AWS Elastic Load Balancer (Application or Network) within NetBox.</p> <ul> <li><code>name</code>: The name of the Load Balancer. (Required)</li> <li><code>arn</code>: The Amazon Resource Name (ARN) of the Load Balancer (optional, unique).</li> <li><code>aws_account</code>: The <code>AWSAccount</code> this Load Balancer belongs to. (Required)</li> <li><code>vpc</code>: The <code>AWSVPC</code> this Load Balancer is deployed in. (Required)</li> <li><code>subnets</code>: Many-to-many relationship with <code>AWSSubnet</code> instances associated with the Load Balancer (optional).</li> <li><code>type</code>: The type of Load Balancer (e.g., <code>application</code>, <code>network</code>). (Required)</li> <li><code>scheme</code>: The scheme of the Load Balancer (e.g., <code>internal</code>, <code>internet-facing</code>). (Required)</li> <li><code>dns_name</code>: The DNS name of the Load Balancer (optional).</li> <li><code>state</code>: The state of the Load Balancer (e.g., <code>planned</code>, <code>active</code>, <code>provisioning</code>, <code>failed</code>). (Required)</li> <li><code>region</code>: The AWS region where the Load Balancer is located. (Required - automatically set from the selected <code>vpc</code>).</li> </ul>"},{"location":"models/aws_subnet/","title":"Aws subnet","text":""},{"location":"models/aws_subnet/#awssubnet","title":"AWSSubnet","text":"<p>A subnet is a range of IP addresses in your VPC. You launch AWS resources, such as Amazon EC2 instances, into your subnets. A subnet must reside in a single Availability Zone and is associated with a route table.</p> <p>For more information, see Subnets for your VPC in the Amazon VPC User Guide.</p>"},{"location":"models/aws_subnet/#attributes","title":"Attributes","text":"<p>Represents an AWS Subnet within NetBox.</p> <ul> <li><code>name</code>: A user-defined descriptive name for the Subnet. (Required)</li> <li><code>subnet_id</code>: The unique AWS Subnet ID (e.g., <code>subnet-0123456789abcdef0</code>) (optional).</li> <li><code>aws_vpc</code>: The <code>AWSVPC</code> this Subnet belongs to. (Required)</li> <li><code>cidr_block</code>: The IPv4 CIDR block for the Subnet, linked to an <code>ipam.Prefix</code> (optional).</li> <li><code>availability_zone</code>: The AWS Availability Zone of the Subnet (e.g., <code>us-east-1a</code>) (optional).</li> <li><code>availability_zone_id</code>: The ID of the Availability Zone (e.g., <code>use1-az1</code>) (optional).</li> <li><code>state</code>: The current state of the Subnet (e.g., <code>planned</code>, <code>available</code>, <code>pending</code>). (Required, defaults to <code>available</code>)</li> <li><code>map_public_ip_on_launch</code>: Whether instances in this subnet get a public IP on launch by default. (Required, defaults to <code>False</code>)</li> </ul>"},{"location":"models/aws_target_group/","title":"Aws target group","text":""},{"location":"models/aws_target_group/#awstargetgroup","title":"AWSTargetGroup","text":"<p>A Target Group is used to route requests to one or more registered targets, such as EC2 instances, IP addresses, or other Application Load Balancers, as part of a Load Balancer. Each target group is used by one or more listeners, which are rules that check for connection requests from clients, using the protocol and port that you configure.</p> <p>For more information, see the Target Groups for your Application Load Balancers or Target Groups for your Network Load Balancers documentation.</p>"},{"location":"models/aws_target_group/#attributes","title":"Attributes","text":"<p>Represents an AWS Target Group within NetBox.</p> <ul> <li><code>name</code>: The name of the Target Group. (Required)</li> <li><code>arn</code>: The Amazon Resource Name (ARN) of the Target Group (optional, unique).</li> <li><code>aws_account</code>: The <code>AWSAccount</code> this Target Group belongs to. (Required)</li> <li><code>region</code>: The AWS region where the Target Group is located. (Required - automatically set from the selected <code>vpc</code>).</li> <li><code>vpc</code>: The <code>AWSVPC</code> this Target Group is associated with. (Required)</li> <li><code>protocol</code>: Protocol for routing traffic to targets (e.g., <code>HTTP</code>, <code>HTTPS</code>, <code>TCP</code>, <code>TLS</code>, <code>UDP</code>, <code>TCP_UDP</code>, <code>GENEVE</code>). (Required)</li> <li><code>port</code>: Port on which targets receive traffic. (Required)</li> <li><code>target_type</code>: Type of targets (e.g., <code>instance</code>, <code>ip</code>, <code>alb</code>). (Required)</li> <li><code>load_balancers</code>: Many-to-many relationship with <code>AWSLoadBalancer</code> instances associated with this Target Group (optional).</li> <li><code>state</code>: The current state of the Target Group (e.g., <code>active</code>, <code>creating</code>, <code>deleting</code>, <code>failed</code>, <code>initial</code>, <code>pending</code>, <code>updating</code>). (Required)</li> </ul>"},{"location":"models/aws_target_group/#health-check-attributes","title":"Health Check Attributes","text":"<ul> <li><code>health_check_protocol</code>: Protocol for health checks (e.g., <code>HTTP</code>, <code>HTTPS</code>, <code>TCP</code>, <code>TLS</code>, <code>UDP</code>, <code>TCP_UDP</code>, <code>GENEVE</code>) (optional).</li> <li><code>health_check_port</code>: Port for health checks (default: 'traffic-port') (optional).</li> <li><code>health_check_path</code>: Destination for HTTP/HTTPS health checks (optional).</li> <li><code>health_check_interval_seconds</code>: Approximate interval between health checks in seconds (optional).</li> <li><code>health_check_timeout_seconds</code>: Timeout for a health check response in seconds (optional).</li> <li><code>healthy_threshold_count</code>: Number of consecutive successful health checks to become healthy (optional).</li> <li><code>unhealthy_threshold_count</code>: Number of consecutive failed health checks to become unhealthy (optional).</li> <li><code>health_check_matcher</code>: For HTTP/HTTPS health checks, the codes to use when checking for a successful response from a target (e.g., <code>200</code>, <code>200-299</code>) (optional, not explicitly in model but good to note conceptually).</li> </ul>"},{"location":"models/aws_vpc/","title":"Aws vpc","text":""},{"location":"models/aws_vpc/#awsvpc","title":"AWSVPC","text":"<p>An Amazon Virtual Private Cloud (VPC) is a virtual network dedicated to your AWS account. It is logically isolated from other virtual networks in the AWS Cloud. You can launch your AWS resources, such as Amazon EC2 instances, into your VPC.</p> <p>For more information, see the Amazon VPC User Guide.</p>"},{"location":"models/aws_vpc/#attributes","title":"Attributes","text":"<p>Represents an AWS Virtual Private Cloud within NetBox.</p> <ul> <li><code>name</code>: A user-defined descriptive name for the VPC. (Required)</li> <li><code>vpc_id</code>: The unique AWS VPC ID (e.g., <code>vpc-0123456789abcdef0</code>) (optional).</li> <li><code>aws_account</code>: The <code>AWSAccount</code> this VPC belongs to. (Required)</li> <li><code>region</code>: The AWS region where the VPC is located. (Required)</li> <li><code>cidr_block</code>: The primary IPv4 CIDR block for the VPC, linked to an <code>ipam.Prefix</code>. (Required)</li> <li><code>state</code>: The current state of the VPC (e.g., <code>planned</code>, <code>available</code>, <code>pending</code>). (Required, defaults to <code>available</code>)</li> <li><code>is_default</code>: Whether this is the default VPC for the account/region. (Required, defaults to <code>False</code>)</li> </ul>"}]}